---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  type?: 'website' | 'article';
}

const { 
  title, 
  description = "Beautiful things from across the internet", 
  image,
  canonicalURL = new URL(Astro.url.pathname, Astro.site || 'http://localhost:4321').href,
  type = 'website'
} = Astro.props;

const siteName = "Rabbit Holes";
const fullTitle = title === "Home" ? siteName : `${title} - ${siteName}`;
const ogImage = image || new URL('/og-image.png', Astro.site || 'http://localhost:4321').href;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{fullTitle}</title>
    <meta name="description" content={description}>
    <link rel="canonical" href={canonicalURL}>
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type}>
    <meta property="og:url" content={canonicalURL}>
    <meta property="og:title" content={fullTitle}>
    <meta property="og:description" content={description}>
    <meta property="og:image" content={ogImage}>
    <meta property="og:site_name" content={siteName}>
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content={canonicalURL}>
    <meta property="twitter:title" content={fullTitle}>
    <meta property="twitter:description" content={description}>
    <meta property="twitter:image" content={ogImage}>
    
    <!-- Additional SEO meta tags -->
    <meta name="robots" content="index, follow">
    <meta name="author" content="Rabbit Holes">
    <meta name="generator" content={Astro.generator}>
    
    <!-- Favicon and app icons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    
    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="Rabbit Holes RSS Feed" href="/rss.xml">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.gstatic.com">
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="#0f0f0f" media="(prefers-color-scheme: dark)">
    <style is:global>
        :root {
            /* Colors - Clean palette */
            --bg-light: #ffffff;
            --text-primary-light: #1a1a1a;
            --text-secondary-light: #666666;
            --text-tertiary-light: #999999;
            --border-light: #e5e5e5;
            --link-light: #2563eb;
            --accent-light: #f8fafc;
            
            --bg-dark: #0f0f0f;
            --text-primary-dark: #e5e5e5;
            --text-secondary-dark: #a3a3a3;
            --text-tertiary-dark: #737373;
            --border-dark: #262626;
            --link-dark: #60a5fa;
            --accent-dark: #1a1a1a;

            /* Typography scale */
            --font-base: 'Manrope', -apple-system, BlinkMacSystemFont, sans-serif;
            --font-size-sm: 14px;
            --font-size-base: 16px;
            --font-size-lg: 18px;
            --font-size-xl: 20px;
            --font-size-2xl: 24px;
            --font-size-3xl: 30px;
            --font-size-4xl: 36px;

            /* Spacing scale */
            --space-xs: 8px;
            --space-sm: 16px;
            --space-md: 24px;
            --space-lg: 32px;
            --space-xl: 48px;
            --space-2xl: 64px;

            /* Line heights */
            --leading-tight: 1.25;
            --leading-normal: 1.5;
            --leading-relaxed: 1.75;

            /* Border radius */
            --radius-sm: 4px;
            --radius-md: 6px;
            --radius-lg: 8px;
            --radius-xl: 12px;
            --radius-full: 9999px;

            /* Shadows */
            --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);

            /* Transitions */
            --transition-fast: 0.15s ease;
            --transition-normal: 0.2s ease;
            --transition-slow: 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            width: 100%;
            overflow-x: hidden;
        }

        body {
            font-family: var(--font-base);
            font-size: var(--font-size-base);
            line-height: var(--leading-normal);
            background: var(--bg-light);
            color: var(--text-primary-light);
            font-weight: 400;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            width: 100%;
            overflow-x: hidden;
        }

        body.dark {
            background: var(--bg-dark);
            color: var(--text-primary-dark);
        }

        .container {
            max-width: 720px;
            margin: 0 auto;
            padding: 0 var(--space-md);
            width: 100%;
            box-sizing: border-box;
        }

        /* Typography base styles */
        h1, h2, h3, h4, h5, h6 {
            font-family: var(--font-base);
            font-weight: 600;
            line-height: var(--leading-tight);
            color: var(--text-primary-light);
        }

        body.dark h1, 
        body.dark h2, 
        body.dark h3, 
        body.dark h4, 
        body.dark h5, 
        body.dark h6 {
            color: var(--text-primary-dark);
        }

        p {
            font-family: var(--font-base);
            line-height: var(--leading-relaxed);
            color: var(--text-primary-light);
        }

        body.dark p {
            color: var(--text-primary-dark);
        }

        a {
            color: var(--link-light);
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        body.dark a {
            color: var(--link-dark);
        }

        a:focus {
            outline: 2px solid var(--link-light);
            outline-offset: 2px;
            border-radius: 2px;
        }

        body.dark a:focus {
            outline-color: var(--link-dark);
        }

        /* Utility Classes */
        .visually-hidden {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }

        .skip-link {
            position: absolute;
            top: -40px;
            left: 6px;
            background: var(--link-light);
            color: white;
            padding: 8px;
            text-decoration: none;
            border-radius: var(--radius-md);
            z-index: 1000;
            font-weight: 600;
            transition: top var(--transition-fast);
        }

        .skip-link:focus {
            top: 6px;
        }

        body.dark .skip-link {
            background: var(--link-dark);
            color: var(--bg-dark);
        }

        .card {
            background: var(--accent-light);
            border: 1px solid var(--border-light);
            border-radius: var(--radius-lg);
            transition: all var(--transition-normal);
        }

        body.dark .card {
            background: var(--accent-dark);
            border-color: var(--border-dark);
        }

        .button {
            display: inline-flex;
            align-items: center;
            gap: var(--space-xs);
            padding: var(--space-xs) var(--space-sm);
            background: transparent;
            border: 1px solid var(--border-light);
            border-radius: var(--radius-full);
            color: var(--text-secondary-light);
            font-size: var(--font-size-sm);
            font-weight: 500;
            cursor: pointer;
            transition: all var(--transition-normal);
            text-decoration: none;
            font-family: var(--font-base);
        }

        .button:hover {
            background: var(--accent-light);
            color: var(--text-primary-light);
            border-color: var(--text-primary-light);
        }

        body.dark .button {
            border-color: var(--border-dark);
            color: var(--text-secondary-dark);
        }

        body.dark .button:hover {
            background: var(--accent-dark);
            color: var(--text-primary-dark);
            border-color: var(--text-primary-dark);
        }

        .button:focus {
            outline: 2px solid var(--link-light);
            outline-offset: 2px;
        }

        body.dark .button:focus {
            outline-color: var(--link-dark);
        }

        /* Ensure images and media don't break layout */
        img, video, iframe {
            max-width: 100%;
            height: auto;
        }

        /* Prevent pre/code blocks from breaking layout */
        pre, code {
            max-width: 100%;
            overflow-x: auto;
        }

        pre {
            white-space: pre-wrap;
            word-wrap: break-word;
        }

        /* Prevent specific elements from breaking layout */
        img, video, iframe, pre, code, table {
            max-width: 100%;
        }

        @media (max-width: 768px) {
            .container {
                padding: 0 var(--space-sm);
            }
        }
    </style>
</head>
<body>
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <button class="theme-toggle" aria-label="Toggle dark mode">🌙</button>
    
    <slot />

    <script>
        // Check for saved theme preference or default to light
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const initialTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');

        if (initialTheme === 'dark') {
            document.body.classList.add('dark');
            document.querySelector('.theme-toggle').textContent = '☀️';
        }

        // Theme toggle functionality
        document.querySelector('.theme-toggle').addEventListener('click', () => {
            const body = document.body;
            const button = document.querySelector('.theme-toggle');
            
            body.classList.toggle('dark');
            const isDark = body.classList.contains('dark');
            
            button.textContent = isDark ? '☀️' : '🌙';
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
    </script>

    <style>
        .theme-toggle {
            position: fixed;
            bottom: 24px;
            right: 24px;
            background: var(--bg-light);
            border: 1px solid var(--border-light);
            color: var(--text-secondary-light);
            cursor: pointer;
            font-size: 18px;
            padding: 12px;
            border-radius: 50%;
            transition: all 0.2s ease;
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 1000;
        }

        .theme-toggle:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
        }

        .theme-toggle:focus {
            outline: 2px solid var(--link-light);
            outline-offset: 2px;
        }

        body.dark .theme-toggle {
            background: var(--accent-dark);
            border-color: var(--border-dark);
            color: var(--text-primary-dark);
            box-shadow: 0 4px 12px rgba(255, 255, 255, 0.1);
        }

        body.dark .theme-toggle:hover {
            box-shadow: 0 6px 20px rgba(255, 255, 255, 0.15);
        }

        body.dark .theme-toggle:focus {
            outline-color: var(--link-dark);
        }

        @media (max-width: 768px) {
            .theme-toggle {
                bottom: 20px;
                right: 20px;
                width: 44px;
                height: 44px;
                font-size: 16px;
            }
        }

        /* Better mobile positioning */
        @media (max-width: 768px) {
            .theme-toggle {
                bottom: 20px;
                right: 20px;
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(10px);
                -webkit-backdrop-filter: blur(10px);
                border: 1px solid rgba(0, 0, 0, 0.1);
            }
            
            body.dark .theme-toggle {
                background: rgba(17, 17, 17, 0.95);
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
        }

        /* Alternative: Integrate with header on very small screens */
        @media (max-width: 480px) {
            .theme-toggle {
                position: absolute;
                top: 20px;
                right: 20px;
                bottom: auto;
                width: 36px;
                height: 36px;
                font-size: 14px;
                background: transparent;
                border: 1px solid var(--border-light);
                box-shadow: none;
            }
            
            body.dark .theme-toggle {
                background: transparent;
                border-color: var(--border-dark);
            }
        }
    </style>
</body>
</html>