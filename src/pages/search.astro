---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<BaseLayout 
    title="Search" 
    description="Search through all posts in Rabbit Holes. Find content by title, tags, or topics."
  >
  <div class="container">
    <Header />
    
    <main>
      <div class="search-container">
        <h2 class="search-title">Search Posts</h2>
        <div class="search-box">
          <input type="text" id="search-input" placeholder="Search for posts, tags, or topics..." />
          <button id="search-btn">Search</button>
        </div>
        <div id="search-results" class="search-results">
          <p class="search-hint">Start typing to search through all posts...</p>
        </div>
      </div>
    </main>

    <Footer />
  </div>

  <script>
    // Simple client-side search functionality
    const searchInput = document.getElementById('search-input');
    const searchResults = document.getElementById('search-results');
    
    // Mock search data - in a real app, you'd fetch this from your content
    const posts = [
      {
        title: "Ocean Currents: The Earth's Hidden Rivers",
        excerpt: "A mesmerizing interactive visualization reveals the invisible rivers of our planet flowing in real-time.",
        url: "/",
        tags: ["science", "visualization"]
      },
      {
        title: "The Mathematics of Natural Beauty", 
        excerpt: "Soap bubbles solve minimal surface problems that challenge our best computers.",
        url: "/",
        tags: ["mathematics", "nature"]
      },
      {
        title: "Cathedrals of Curiosity",
        excerpt: "A gorgeous photo series of libraries around the world tells stories through architecture.",
        url: "/",
        tags: ["photography", "architecture"]
      }
    ];

    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.toLowerCase().trim();
      
      if (query.length === 0) {
        searchResults.innerHTML = '<p class="search-hint">Start typing to search through all posts...</p>';
        return;
      }

      const results = posts.filter(post => 
        post.title.toLowerCase().includes(query) ||
        post.excerpt.toLowerCase().includes(query) ||
        post.tags.some(tag => tag.toLowerCase().includes(query))
      );

      if (results.length === 0) {
        searchResults.innerHTML = '<p class="no-results">No posts found matching your search.</p>';
        return;
      }

      searchResults.innerHTML = results.map(post => `
        <div class="search-result">
          <h3><a href="${post.url}">${post.title}</a></h3>
          <p>${post.excerpt}</p>
          <div class="result-tags">
            ${post.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
          </div>
        </div>
      `).join('');
    });

    document.getElementById('search-btn').addEventListener('click', () => {
      searchInput.focus();
    });
  </script>
</BaseLayout>

<style>
  .search-container {
    max-width: 600px;
    margin: 0 auto;
  }

  .search-title {
    font-size: 32px;
    font-weight: 600;
    text-align: center;
    margin-bottom: 40px;
    color: var(--text-primary-light);
  }

  body.dark .search-title {
    color: var(--text-primary-dark);
  }

  .search-box {
    display: flex;
    gap: 12px;
    margin-bottom: 40px;
  }

  #search-input {
    flex: 1;
    padding: 16px 20px;
    font-size: 16px;
    border: 1px solid var(--border-light);
    border-radius: 8px;
    background: var(--bg-light);
    color: var(--text-primary-light);
    font-family: inherit;
  }

  #search-input:focus {
    outline: none;
    border-color: var(--link-light);
    box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.1);
  }

  body.dark #search-input {
    background: var(--accent-dark);
    border-color: var(--border-dark);
    color: var(--text-primary-dark);
  }

  body.dark #search-input:focus {
    border-color: var(--link-dark);
    box-shadow: 0 0 0 3px rgba(102, 179, 255, 0.1);
  }

  #search-btn {
    padding: 16px 24px;
    background: var(--link-light);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  #search-btn:hover {
    background: #0052a3;
  }

  body.dark #search-btn {
    background: var(--link-dark);
    color: var(--bg-dark);
  }

  .search-results {
    min-height: 200px;
  }

  .search-hint,
  .no-results {
    text-align: center;
    color: var(--text-secondary-light);
    font-style: italic;
  }

  body.dark .search-hint,
  body.dark .no-results {
    color: var(--text-secondary-dark);
  }

  .search-result {
    padding: 24px;
    border: 1px solid var(--border-light);
    border-radius: 8px;
    margin-bottom: 16px;
    background: var(--accent-light);
  }

  body.dark .search-result {
    border-color: var(--border-dark);
    background: var(--accent-dark);
  }

  .search-result h3 {
    margin-bottom: 8px;
  }

  .search-result h3 a {
    color: var(--text-primary-light);
    text-decoration: none;
  }

  .search-result h3 a:hover {
    color: var(--link-light);
  }

  body.dark .search-result h3 a {
    color: var(--text-primary-dark);
  }

  body.dark .search-result h3 a:hover {
    color: var(--link-dark);
  }

  .search-result p {
    color: var(--text-secondary-light);
    margin-bottom: 12px;
  }

  body.dark .search-result p {
    color: var(--text-secondary-dark);
  }

  .result-tags {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
  }

  .result-tags .tag {
    padding: 4px 10px;
    background: var(--bg-light);
    border: 1px solid var(--border-light);
    border-radius: 12px;
    font-size: 11px;
    color: var(--text-secondary-light);
  }

  body.dark .result-tags .tag {
    background: var(--bg-dark);
    border-color: var(--border-dark);
    color: var(--text-secondary-dark);
  }

  @media (max-width: 768px) {
    .search-box {
      flex-direction: column;
    }

    #search-btn {
      align-self: stretch;
    }
  }
</style>